@rendermode InteractiveServer

@inject ProductServices productService

@if (Products == null)
{
    <p>We're picking the pickles!</p>
}
else
{
    <div class="pt-3">
        <QuickGrid Items="@Products">
            <TemplateColumn Title="Product">
                <a href="ProductDetails/@context.Id">@context.Name</a>
            </TemplateColumn>
            <PropertyColumn Title="Type" Property="@(p => p.ProductType.Name)" Sortable="true" />
            <PropertyColumn Property="@(p => p.Description)" />
            <TemplateColumn>
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" 
                data-bs-target="#reviewModal" @onclick="@(() => LeaveReview(context))">Review</button>
            </TemplateColumn>
        </QuickGrid>
    </div>

    <WriteReview Product="@SelectedProduct" />

}

@code {
    private IQueryable<Product>? Products { get; set; }
    private Product? SelectedProduct { get; set; } = null;    

    protected override async Task OnInitializedAsync()
    {
        Products = (await productService.GetProductsAsync()).AsQueryable();
    }

    void LeaveReview(Product product)
    {        
        SelectedProduct = product;     
        Console.WriteLine($"Selected product: {SelectedProduct.Name}");
    }
}
